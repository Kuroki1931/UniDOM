<launch>

  <arg name="robot_ip_1" />	
  <arg name="robot_ip_2" />
  <arg name="report_type_1" default="normal" />	
  <arg name="report_type_2" default="normal" />	
  <arg name="hw_ns_1" default="L_xarm7" />
  <arg name="hw_ns_2" default="R_xarm7" />
  <arg name="enforce_limits_1" default="true" />
	<arg name="enforce_limits_2" default="true" />
  <arg name="baud_checkset_1" default="true" />
	<arg name="baud_checkset_2" default="true" />
	<arg name="default_gripper_baud_1" default="2000000" />
  <arg name="default_gripper_baud_2" default="2000000" />
  <arg name="show_rviz_1" default="false" />
  <arg name="show_rviz_2" default="false" />
  <arg name="add_gripper_1" default="true" />  
  <arg name="add_gripper_2" default="true" />  
  <arg name="use_gripper_action" default="true" />

  <!-- Important: currently real xArm can be either controlled by API service or Moveit planner, but not at the same time! -->
  <!-- If you use moveit, use the launch file in xarm*_moveit_config package for startup! -->
  <arg name="use_moveit" default="false" />
  
  <!-- important parameters for combined hardware interface initialization -->
  <rosparam file="$(find dual_xarm7_gripper_moveit_config)/config/xarm7_combined_control_config.yaml" command="load"/>

  <!-- common: bring up node to collect robot feedback -->
  <include file="$(find xarm_bringup)/launch/xarm_driver_common.launch">
    <arg name="robot_ip" value="$(arg robot_ip_1)" />
    <arg name="report_type" value="$(arg report_type_1)" />
    <arg name="dof" value="7" />
    <arg name="use_moveit" value="$(arg use_moveit)" />
    <arg name="namespace" value="$(arg hw_ns_1)" />
    <arg name="enforce_limits" value="$(arg enforce_limits_1)" />
    <arg name="baud_checkset" value="$(arg baud_checkset_1)" />
    <arg name="default_gripper_baud" value="$(arg default_gripper_baud_1)" />
    <arg name="show_rviz" value="$(arg show_rviz_1)" />
    <arg name="add_gripper" value="$(arg add_gripper_1)" />
  </include>

  <include file="$(find xarm_bringup)/launch/xarm_driver_common.launch">
    <arg name="robot_ip" value="$(arg robot_ip_2)" />
    <arg name="report_type" value="$(arg report_type_2)" />
    <arg name="dof" value="7" />
    <arg name="use_moveit" value="$(arg use_moveit)" />
    <arg name="namespace" value="$(arg hw_ns_2)" />
    <arg name="enforce_limits" value="$(arg enforce_limits_2)" />
    <arg name="baud_checkset" value="$(arg baud_checkset_2)" />
    <arg name="default_gripper_baud" value="$(arg default_gripper_baud_2)" />
    <arg name="show_rviz" value="$(arg show_rviz_2)" />
    <arg name="add_gripper" value="$(arg add_gripper_2)" />
  </include>

  <node if="$(arg use_gripper_action)"
    name="gripper_action_server"
    pkg="xarm_gripper"
    type="gripper_action_server"
    respawn="true"
    output="screen"
    ns="$(arg hw_ns_1)"/>

  <node if="$(arg use_gripper_action)"
    name="gripper_action_server"
    pkg="xarm_gripper"
    type="gripper_action_server"
    respawn="true"
    output="screen"
    ns="$(arg hw_ns_2)"/>

  <!-- gripperの状態をns/joint_statesに反映・moveitから操作可能にするノードを起動-->
  <group if="$(arg add_gripper_1)">
    <rosparam file="$(find xarm_gripper)/config/gripper_control.yaml" command="load" ns="$(arg hw_ns_1)"/>
    <node name="gripper_controller_manager"
          pkg="controller_manager"
          type="spawner"
          respawn="false"
          output="screen"
          args="joint_state_controller"
          ns="$(arg hw_ns_1)"/>  
    <node name="gripper_control_node"
        pkg="xarm_gripper"
        type="gripper_control_node"
        respawn="true"
        output="screen"
        ns="$(arg hw_ns_1)">
        <param name="joint_prefix" value="L_"/>
    </node>  
  </group>

  <group if="$(arg add_gripper_2)">
    <rosparam file="$(find xarm_gripper)/config/gripper_control.yaml" command="load" ns="$(arg hw_ns_2)"/>
    <node if="$(arg use_gripper_action)"
          name="gripper_controller_manager"
          pkg="controller_manager"
          type="spawner"
          respawn="false"
          output="screen"
          args="joint_state_controller"
          ns="$(arg hw_ns_2)"/>  
    <node if="$(arg use_gripper_action)"
          name="gripper_control_node"
          pkg="xarm_gripper"
          type="gripper_control_node"
          respawn="true"
          output="screen"
          ns="$(arg hw_ns_2)">
          <param name="joint_prefix" value="R_"/>
    </node>  
  </group>

</launch>
